package main

import (
	"fmt"
	"math/rand"
	"os"
	"strconv"
	"time"
)

func random(min, max int) int {
	return rand.Intn(max-min) + min
}

func main() {

	MIN := 0

	// As we only want to get printable ASCII characters, we limit the range of pseudo-random numbers
	// that can be generated. The number of printable characters in the ASCII table is 94. This means
	// that the range of the pseudo-random numbers that the program can generate should be from 0 to 94,
	// not including 94.
	MAX := 94
	var LENGTH int64 = 8

	arguments := os.Args

	switch len(arguments) {
	case 2:
		LENGTH, _ = strconv.ParseInt(arguments[1], 10, 64)
	default:
		fmt.Println("Using default length for password")
	}

	rand.Seed(time.Now().Unix())

	// startChar variable holds the first ASCII character that can be generated by the utility, which in
	// this case is the exclamation mark, which has a decimal ASCII value of 33. Given that the programm
	// can generate pseudo-randomnumbers up to 94, the maximum ASCII value that can be generated is 93+33,
	// which is equal to 126, which is the ASCII value of ~.
	startChar := "!"
	var i int64 = 1
	for {
		myRand := random(MIN, MAX)
		newChar := string(startChar[0] + byte(myRand))
		fmt.Print(newChar)
		if i == LENGTH {
			break
		}
		i++
	}
	fmt.Println()

}
